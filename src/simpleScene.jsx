/*
  Auto-generated by Spline
*/

import useSpline from '@splinetool/r3f-spline'
import { OrthographicCamera } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { useRef } from "react"

import Controls from './components/canvas/Controls'
import GameDB from '@/helpers/gameDb'
import useStore from '@/helpers/store'

const MrCool = ({ nodes, materials }) => {
  const mesh = useRef(null)
  useFrame((state, delta) =>
  mesh.current
    ? (mesh.current.rotation.z = mesh.current.rotation.z += 0.01)
    : null
  )
  const setEntity = useStore((state) => state.setEntity)
  const togglePan = useStore((state) => state.togglePan)

  const entity = GameDB.getModel("0x0100000000000115")
  const handleClick = () => {
    setEntity(entity)
    togglePan()
  }

  return (
    <mesh
      name="Cube 2"
      geometry={nodes['Cube 2'].geometry}
      material={materials['Cube 2 Material']}
      castShadow={true}
      receiveShadow={true}
      position={[158.81, 81.88, -120.62]}
      rotation={[-Math.PI / 2, 0, 0]}
      scale={0.54}
      onClick={handleClick}
      ref={mesh}
    />
  )
}

export default function Scene({ ...props }) {
  const { nodes, materials } = useSpline('https://prod.spline.design/KJ3y-vhW9Ap77fN6/scene.splinecode')

  const testPan = false
  return (
    <>
      <color attach="background" args={['#9a9b9e']} />
      <group {...props} dispose={null}>
        <Controls pan={testPan}/>

        <OrthographicCamera
          name="Camera"
          makeDefault={true}
          far={100000}
          near={-100000}
          up={[0, 1, 0]}
          position={[577.35, 577.35, 577.35]}
          rotation={[-Math.PI / 4, 0.62, Math.PI / 6]}
        />
        <MrCool 
          nodes={nodes}
          materials={materials}
        />
        <mesh
          name="Cube"
          geometry={nodes.Cube.geometry}
          material={materials['Cube Material']}
          castShadow
          receiveShadow
          position={[-201, 81.88, 25]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={0.54}
        />
        <directionalLight
          name="Directional Light"
          castShadow={true}
          intensity={1}
          shadow-mapSize-width={1024}
          shadow-mapSize-height={1024}
          shadow-camera-near={-10000}
          shadow-camera-far={100000}
          shadow-camera-left={-500}
          shadow-camera-right={500}
          shadow-camera-top={500}
          shadow-camera-bottom={-500}
          position={[200, 491.06, 300]}
        />
        <mesh
          name="Rectangle"
          geometry={nodes.Rectangle.geometry}
          material={materials['Rectangle Material']}
          castShadow={true}
          receiveShadow={true}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={3.11}
        />
        {/* <hemisphereLight name="Default Ambient Light" intensity={0.75} color="#eaeaea" position={[0, 1, 0]} /> */}
      </group>
    </>
  )
}
